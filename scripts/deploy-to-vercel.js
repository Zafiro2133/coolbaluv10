const { execSync } = require('child_process');
const path = require('path');

console.log('üöÄ Preparando despliegue en Vercel...\n');

try {
  // Navegar al directorio del proyecto
  const projectDir = path.resolve(__dirname, '..');
  process.chdir(projectDir);

  // 1. Verificar que estamos en el directorio correcto
  console.log('1Ô∏è‚É£ Verificando directorio del proyecto...');
  const packageJson = require('../package.json');
  console.log(`‚úÖ Proyecto: ${packageJson.name}`);

  // 2. Verificar que pnpm est√© instalado
  console.log('\n2Ô∏è‚É£ Verificando pnpm...');
  try {
    execSync('pnpm --version', { stdio: 'pipe' });
    console.log('‚úÖ pnpm est√° instalado');
  } catch (error) {
    console.error('‚ùå pnpm no est√° instalado. Instalando...');
    execSync('npm install -g pnpm', { stdio: 'inherit' });
  }

  // 3. Instalar dependencias
  console.log('\n3Ô∏è‚É£ Instalando dependencias...');
  execSync('pnpm install', { stdio: 'inherit' });

  // 4. Verificar build local
  console.log('\n4Ô∏è‚É£ Verificando build local...');
  execSync('pnpm build', { stdio: 'inherit' });
  console.log('‚úÖ Build exitoso');

  // 5. Verificar que Vercel CLI est√© instalado
  console.log('\n5Ô∏è‚É£ Verificando Vercel CLI...');
  try {
    execSync('vercel --version', { stdio: 'pipe' });
    console.log('‚úÖ Vercel CLI est√° instalado');
  } catch (error) {
    console.log('üì¶ Instalando Vercel CLI...');
    execSync('npm install -g vercel', { stdio: 'inherit' });
  }

  // 6. Verificar configuraci√≥n
  console.log('\n6Ô∏è‚É£ Verificando configuraci√≥n...');
  
  // Verificar archivo vercel.json
  const fs = require('fs');
  if (!fs.existsSync('vercel.json')) {
    console.error('‚ùå Archivo vercel.json no encontrado');
    process.exit(1);
  }
  console.log('‚úÖ vercel.json encontrado');

  // Verificar variables de entorno
  const envExample = fs.readFileSync('env.example', 'utf8');
  const requiredVars = [
    'VITE_SUPABASE_URL',
    'VITE_SUPABASE_ANON_KEY',
    'VITE_RESEND_API_KEY'
  ];

  console.log('\nüìã Variables de entorno requeridas:');
  requiredVars.forEach(varName => {
    console.log(`   - ${varName}`);
  });

  console.log('\n‚ö†Ô∏è  IMPORTANTE: Aseg√∫rate de configurar estas variables en Vercel:');
  console.log('   1. Ve a tu proyecto en Vercel');
  console.log('   2. Settings > Environment Variables');
  console.log('   3. Agrega todas las variables listadas arriba');

  // 7. Instrucciones de despliegue
  console.log('\nüöÄ Pasos para desplegar:');
  console.log('   1. Ve a https://vercel.com');
  console.log('   2. Crea una nueva cuenta o inicia sesi√≥n');
  console.log('   3. Haz clic en "New Project"');
  console.log('   4. Importa tu repositorio de GitHub');
  console.log('   5. Configura las variables de entorno');
  console.log('   6. Haz clic en "Deploy"');

  // 8. Verificar configuraci√≥n de Supabase
  console.log('\nüîß Configuraci√≥n adicional requerida:');
  console.log('   - Agrega tu dominio de Vercel a CORS en Supabase');
  console.log('   - Verifica que las edge functions est√©n desplegadas');
  console.log('   - Confirma que el dominio de Resend est√© verificado');

  console.log('\n‚úÖ Preparaci√≥n completada!');
  console.log('\nüìö Consulta VERCEL_DEPLOYMENT_GUIDE.md para instrucciones detalladas');

} catch (error) {
  console.error('‚ùå Error durante la preparaci√≥n:', error.message);
  console.log('\nüîß Posibles soluciones:');
  console.log('1. Verifica que est√©s en el directorio correcto del proyecto');
  console.log('2. Aseg√∫rate de que Node.js est√© instalado');
  console.log('3. Verifica que tengas permisos de escritura');
  process.exit(1);
} 