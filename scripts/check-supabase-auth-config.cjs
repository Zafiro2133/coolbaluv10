const { createClient } = require('@supabase/supabase-js');

// Configuraci√≥n de Supabase
const supabaseUrl = 'https://rwgxdtfuzpdukaguogyh.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ3Z3hkdGZ1enBkdWthZ3VvZ3loIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMzNzEyOTEsImV4cCI6MjA2ODk0NzI5MX0.6zUaR58p-SHC8axMZ3KzMWCEGeIfBQp2VKVAb0wvVW0';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkAuthConfig() {
  console.log('üîç Verificando configuraci√≥n de autenticaci√≥n de Supabase...\n');

  try {
    // Paso 1: Verificar configuraci√≥n actual
    console.log('1Ô∏è‚É£ Verificando configuraci√≥n actual...');
    
    // Intentar obtener informaci√≥n de la configuraci√≥n de auth
    const { data: sessionData, error: sessionError } = await supabase.auth.getSession();
    
    if (sessionError) {
      console.error('‚ùå Error al obtener sesi√≥n:', sessionError);
    } else {
      console.log('‚úÖ Conexi√≥n a Supabase Auth exitosa');
    }

    // Paso 2: Probar registro con confirmaci√≥n expl√≠cita
    console.log('\n2Ô∏è‚É£ Probando registro con confirmaci√≥n expl√≠cita...');
    
    const testEmail = `test-confirm-${Date.now()}@example.com`;
    const testPassword = 'TestPassword123!';
    
    const { data, error } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
      options: {
        emailRedirectTo: 'http://localhost:3000/confirm-email',
        data: {
          first_name: 'Test',
          last_name: 'Confirm'
        }
      }
    });

    if (error) {
      console.error('‚ùå Error al registrar usuario:', error);
      return;
    }

    console.log('‚úÖ Usuario registrado exitosamente');
    console.log('üìß Email:', testEmail);
    console.log('üÜî User ID:', data.user?.id);
    console.log('üìß Email confirmado:', data.user?.email_confirmed_at);
    console.log('üìß Confirmado autom√°ticamente:', data.user?.email_confirmed_at ? 'S√ç' : 'NO');

    // Paso 3: Verificar si hay configuraci√≥n de confirmaci√≥n
    console.log('\n3Ô∏è‚É£ Verificando configuraci√≥n de confirmaci√≥n...');
    
    if (data.user?.email_confirmed_at) {
      console.log('‚ö†Ô∏è  PROBLEMA DETECTADO: El email se confirma autom√°ticamente');
      console.log('üìß Esto significa que Supabase est√° configurado para NO requerir confirmaci√≥n');
      console.log('üîß Para solucionarlo, necesitas:');
      console.log('   1. Ir al Dashboard de Supabase');
      console.log('   2. Authentication > Settings');
      console.log('   3. Deshabilitar "Enable email confirmations"');
      console.log('   4. O configurar correctamente el SMTP');
    } else {
      console.log('‚úÖ Email requiere confirmaci√≥n (configuraci√≥n correcta)');
    }

    // Paso 4: Verificar configuraci√≥n de SMTP
    console.log('\n4Ô∏è‚É£ Verificando configuraci√≥n de SMTP...');
    console.log('üìß Para verificar la configuraci√≥n de SMTP:');
    console.log('   1. Ve al Dashboard de Supabase');
    console.log('   2. Authentication > Settings > SMTP Settings');
    console.log('   3. Verifica que est√© configurado correctamente');
    console.log('   4. O usa el proveedor por defecto de Supabase');

    console.log('\n‚úÖ Verificaci√≥n completada');
    console.log('\nüìã Resumen:');
    console.log('- Usuario registrado:', testEmail);
    console.log('- Confirmaci√≥n autom√°tica:', data.user?.email_confirmed_at ? 'S√ç' : 'NO');
    
    if (data.user?.email_confirmed_at) {
      console.log('\nüö® ACCI√ìN REQUERIDA:');
      console.log('El sistema est√° configurado para NO requerir confirmaci√≥n de email.');
      console.log('Esto es un problema de seguridad. Necesitas configurar Supabase correctamente.');
    } else {
      console.log('\n‚úÖ Configuraci√≥n correcta: Los usuarios deben confirmar su email.');
    }

  } catch (error) {
    console.error('‚ùå Error inesperado:', error);
  }
}

// Ejecutar la verificaci√≥n
checkAuthConfig(); 