const { createClient } = require('@supabase/supabase-js');

// Configuraci√≥n de Supabase
const supabaseUrl = 'https://rwgxdtfuzpdukaguogyh.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ3Z3hkdGZ1enBkdWthZ3VvZ3loIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMzNzEyOTEsImV4cCI6MjA2ODk0NzI5MX0.6zUaR58p-SHC8axMZ3KzMWCEGeIfBQp2VKVAb0wvVW0';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkCurrentUserStatus() {
  console.log('üîç Verificando estado del usuario actual...\n');

  try {
    // Paso 1: Verificar sesi√≥n actual
    console.log('1Ô∏è‚É£ Verificando sesi√≥n actual...');
    
    const { data: sessionData, error: sessionError } = await supabase.auth.getSession();
    
    if (sessionError) {
      console.error('‚ùå Error al obtener sesi√≥n:', sessionError);
    } else if (sessionData.session) {
      const user = sessionData.session.user;
      console.log('‚úÖ Usuario autenticado encontrado');
      console.log('üìß Email:', user.email);
      console.log('üÜî User ID:', user.id);
      console.log('üìß Email confirmado:', user.email_confirmed_at);
      console.log('üìÖ Creado:', user.created_at);
      console.log('üîê √öltimo acceso:', user.last_sign_in_at);
    } else {
      console.log('üì≠ No hay usuario autenticado');
    }

    // Paso 2: Verificar configuraci√≥n de autenticaci√≥n
    console.log('\n2Ô∏è‚É£ Verificando configuraci√≥n de autenticaci√≥n...');
    
    // Intentar registrar un usuario de prueba para ver el comportamiento
    const testEmail = `test-status-${Date.now()}@example.com`;
    const testPassword = 'TestPassword123!';
    
    console.log('üìß Registrando usuario de prueba:', testEmail);
    
    const { data, error } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
      options: {
        emailRedirectTo: 'http://localhost:3000/confirm-email',
        data: {
          first_name: 'Test',
          last_name: 'Status'
        }
      }
    });

    if (error) {
      console.error('‚ùå Error al registrar usuario:', error);
      return;
    }

    console.log('‚úÖ Usuario registrado exitosamente');
    console.log('üìß Email confirmado:', data.user?.email_confirmed_at);
    console.log('üîê Sesi√≥n activa:', !!data.session);

    // Paso 3: Verificar si el usuario puede acceder inmediatamente
    if (data.session) {
      console.log('\n‚ö†Ô∏è  PROBLEMA DETECTADO:');
      console.log('El usuario puede acceder inmediatamente despu√©s del registro');
      console.log('Esto significa que Supabase est√° configurado para NO requerir confirmaci√≥n');
      
      // Intentar hacer logout para simular el comportamiento correcto
      await supabase.auth.signOut();
      console.log('‚úÖ Sesi√≥n cerrada para simular confirmaci√≥n requerida');
    } else {
      console.log('\n‚úÖ Comportamiento correcto:');
      console.log('El usuario NO puede acceder inmediatamente');
      console.log('Debe confirmar su email primero');
    }

    // Paso 4: Verificar configuraci√≥n recomendada
    console.log('\n3Ô∏è‚É£ Configuraci√≥n recomendada para Supabase:');
    console.log('üìã En el Dashboard de Supabase:');
    console.log('   1. Ve a Authentication > Settings');
    console.log('   2. En "Email Auth":');
    console.log('      ‚úÖ Enable email confirmations: HABILITAR');
    console.log('      ‚úÖ Enable secure email change: HABILITAR');
    console.log('      ‚úÖ Enable email change confirmations: HABILITAR');
    console.log('   3. En "SMTP Settings":');
    console.log('      - Configura tu proveedor de email');
    console.log('      - O usa el proveedor por defecto de Supabase');

    // Paso 5: Verificar implementaci√≥n del frontend
    console.log('\n4Ô∏è‚É£ Verificaci√≥n de implementaci√≥n del frontend:');
    console.log('‚úÖ Verificaci√≥n en Reservation.tsx: IMPLEMENTADA');
    console.log('‚úÖ Banner de verificaci√≥n: IMPLEMENTADO');
    console.log('‚úÖ Cierre de sesi√≥n post-registro: IMPLEMENTADO');
    console.log('‚úÖ Verificaci√≥n en AuthContext: IMPLEMENTADA');

    console.log('\n‚úÖ Verificaci√≥n completada');
    console.log('\nüìã Resumen:');
    console.log('- Usuario de prueba:', testEmail);
    console.log('- Confirmaci√≥n autom√°tica:', data.user?.email_confirmed_at ? 'S√ç' : 'NO');
    console.log('- Acceso inmediato:', !!data.session ? 'S√ç' : 'NO');
    
    if (data.user?.email_confirmed_at) {
      console.log('\nüö® ACCI√ìN REQUERIDA:');
      console.log('Configurar Supabase para requerir confirmaci√≥n de email');
      console.log('Ver la gu√≠a en: docs/SOLUCION_EMAIL_CONFIRMACION.md');
    } else {
      console.log('\n‚úÖ Configuraci√≥n correcta');
    }

  } catch (error) {
    console.error('‚ùå Error inesperado:', error);
  }
}

// Ejecutar la verificaci√≥n
checkCurrentUserStatus(); 